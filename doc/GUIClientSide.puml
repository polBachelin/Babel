@startuml Babel

!theme spacelab


namespace Client {

    class BabelClient extends QApplication
    {
        +BabelClient(int argc, char *argv[]);
        +~BabelClient();
        +int start();

        -Client::GUI::MainWindow mainWindow;
    }

namespace GUI {
    enum pageNames
    {
        LOGIN,
        CONTACTS,
        NEXT
    }

    class ClientInfos
    {
        +std::string username
        +std::string password
    }

    class MainWindow extends QMainWindow
    {
        .. Q_OBJECT ..

        -PageManager _pages;
        -ClientInfos _infos;
        +MainWindow();
        +~MainWindow();
        -void initConnections(void);
        ..public slots: ..
        +void changeCurrentPage(pageNames);

    }

    namespace pages {

        class PageManager extends QStackedWidget
        {
            -std::map<pageNames, std::unique_ptr<APage>> _pages;
            -QWidget *_parent;
            -ClientInfos _infos;
            +PageManager(QWidget *parent);
            +~PageManager();
            +void addPage(pageNames name);
            +void setCurrentPage(pageNames name);
            +APage *getPage(pageNames name);
        }

        abstract APage extends QWidget
        {
            .. Q_OBJECT ..

            #std::unique_ptr<QGridLayout> _layout;
            #QWidget *_parent;
            #ClientInfos _infos;

            +APage(ClientInfos infos, QWidget *parent = nullptr);
            +~APage() = default;
            +void initConnections() = 0;
            .. signals: ..
                +void changePage(pageNames name);
        }

        class RegisterPage implements APage
        {

        }

        class LoginPage implements APage
        {
            ..Q_OBJECT..
                -std::unique_ptr<QPushButton> _signButton;
                -std::unique_ptr<QLineEdit> _usernameForm;
                -std::unique_ptr<QLineEdit> _passwordForm;
                -std::unique_ptr<QFormLayout> _formLayout;

                +LoginPage(ClientInfos infos, QWidget *parent = nullptr);
                +~LoginPage() = default;
                +void initConnections() override;
            .. public slots: ..
                ~void changeWidth(int width);
                ~void changeUsername(QString username);
                ~void signIn();

        }

        class ProfilPage implements APage
        {

        }
    }



}

namespace Audio {

}

namespace Network {

}

namespace Exceptions {

class ClientException extends std::exception
{
    +const char *what() const noexcept override;
}

class CommandError extends ClientException
{

}

class CommandError
{

}

}



}


@enduml